export async function onRequest(t){const{request:s}=t;try{const e=t.env.RPC_URL||"https://zigscan.net",o=new URL(s.url),{searchParams:n}=o,r=n.get("path")||"";if(n.delete("path"),"/tx"===r){const t=n.get("hash");if(console.log("[RPC PROXY] Original transaction hash:",t),t&&t.startsWith("0x")){const s=t.substring(2);console.log("[RPC PROXY] Removing 0x prefix, using hash:",s),n.set("hash",s)}}const a=n.toString();let c="";c="/validators"===r?`${e}/validators`:"/status"===r?`${e}/status`:`${e}${r.startsWith("/")?r:"/"+r}${a?"?"+a:""}`,console.log("[RPC PROXY] Fetching:",c);const l=await fetch(c,{method:"GET",headers:{Accept:"application/json","User-Agent":"ZigChain-Explorer/1.0"}}),i=await l.text();return 200!==l.status&&console.error("[RPC PROXY] Non-200 response:",l.status,i),new Response(i,{status:l.status,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}catch(t){return console.error("[RPC PROXY] Proxy error:",t),new Response(JSON.stringify({error:"Proxy error",detail:String(t)}),{status:502,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}}